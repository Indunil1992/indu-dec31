AWSTemplateFormatVersion: '2010-09-09'
Description: 'This template creates the stack for project indu-dec31. Generated by Sigma'
Parameters:
  lambdaCodeBucketParameter:
    Type: String
    Description: 'Name of the S3 bucket containing the Lambda deployment package'
  lambdaCodeKeyParameter:
    Type: String
    Description: 'S3 key of the Lambda deployment package'
Outputs:
  apiginduuDec31indunfdfdfilqatstANY:
    Description: 'URL of induu-dec31/indunfdfdfil/qa/tst:ANY endpoint'
    Value:
      'Fn::Join':
        - ""
        -
          - 'https://'
          -
            Ref: apiginduuDec31
          - .execute-api.
          -
            Ref: 'AWS::Region'
          - .amazonaws.com/
          - test123
          - /indunfdfdfil/qa/tst
  cognitoIndunilUserPool:
    Description: 'ID of Cognito user pool Indunil-User-Pool'
    Value: us-east-1_WrZwPbTz1
  induDec31:
    Description: 'ARN of Lambda function induDec31'
    Value:
      'Fn::GetAtt':
        - induDec31
        - Arn
Resources:
  apiginduuDec31:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Description: 'An API generated by Sigma'
      Name: induu-dec31
      EndpointConfiguration:
        Types:
          - EDGE
  apiginduuDec31indunfdfdfil:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId:
        Ref: apiginduuDec31
      ParentId:
        'Fn::GetAtt':
          - apiginduuDec31
          - RootResourceId
      PathPart: indunfdfdfil
  apiginduuDec31indunfdfdfilqa:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId:
        Ref: apiginduuDec31
      ParentId:
        Ref: apiginduuDec31indunfdfdfil
      PathPart: qa
  apiginduuDec31indunfdfdfilqatst:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId:
        Ref: apiginduuDec31
      ParentId:
        Ref: apiginduuDec31indunfdfdfilqa
      PathPart: tst
  apiginduuDec31indunfdfdfilqatstANY:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId:
        Ref: apiginduuDec31
      ResourceId:
        Ref: apiginduuDec31indunfdfdfilqatst
      HttpMethod: ANY
      AuthorizationType: NONE
      MethodResponses:
        -
          StatusCode: '200'
      Integration:
        Type: AWS
        IntegrationHttpMethod: POST
        Uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${induDec31.Arn}/invocations'
        IntegrationResponses:
          -
            StatusCode: '200'
  induDec31:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: induDec31
      Description: 'Invokes functions defined in indu-dec31.js in project indu-dec31. Generated by Sigma.'
      Code:
        S3Bucket:
          Ref: lambdaCodeBucketParameter
        S3Key:
          Ref: lambdaCodeKeyParameter
      MemorySize: 128
      Handler: indu-dec31.handler
      Timeout: 60
      Runtime: nodejs10.x
      Layers: []
      TracingConfig:
        Mode: PassThrough
      Role:
        'Fn::GetAtt':
          - induDec31ExecutionRole
          - Arn
      Environment:
        Variables:
          SIGMA_AWS_ACC_ID:
            Ref: 'AWS::AccountId'
  induDec31ExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
      Policies:
        -
          PolicyName: induDec31Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - {Effect: Allow, Resource: 'arn:aws:cognito-idp:us-east-1:318300609668:userpool/us-east-1_WrZwPbTz1', Action: ['cognito-idp:ListUsers']}
              - {Effect: Allow, Resource: 'arn:aws:s3:::inbubuckett', Action: ['s3:ListBucket']}
              - {Effect: Allow, Resource: 'arn:aws:execute-api:us-east-1::///', Action: ['sagemaker:AddTags']}
  apiginduuDec31indunfdfdfilqatstANYPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        Ref: induDec31
      SourceArn:
        'Fn::Sub':
          - 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/*/${__Method__}${__Path__}'
          -
            __Method__: '*'
            __Path__: /indunfdfdfil/qa/tst
            __ApiId__:
              Ref: apiginduuDec31
      Principal: apigateway.amazonaws.com
  cognitoIndunilUserPoolPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName:
        Ref: induDec31
      SourceArn: 'arn:aws:cognito-idp:us-east-1:318300609668:userpool/us-east-1_WrZwPbTz1'
      Principal: cognito-idp.amazonaws.com
  cognitoIndunilUserPoolCli0induDec31:
    Type: 'Custom::cli2cloudformation'
    Properties:
      ServiceToken:
        'Fn::GetAtt':
          - cli2cloudformationinduDec31
          - Arn
      CliCommandCreate:
        'Fn::Join':
          - ' '
          -
            - 'aws cognito-idp update-user-pool --user-pool-id us-east-1_WrZwPbTz1'
            - '--policies PasswordPolicy=\{MinimumLength=8,RequireUppercase=true,RequireLowercase=true,RequireNumbers=true,RequireSymbols=true,TemporaryPasswordValidityDays=7\}'
            -
              'Fn::Join': ["", ['--verification-message-template ''', DefaultEmailOption=CONFIRM_WITH_CODE, '''']]
            - '--mfa-configuration OFF'
            - '--lambda-config'
            -
              'Fn::Join': [',', ['CustomMessage=arn:aws:lambda:us-east-1:318300609668:function:testyyyinduuuu', 'PreAuthentication=arn:aws:lambda:us-east-1:318300609668:function:samplei', {'Fn::Join': ["", [CreateAuthChallenge=, {'Fn::GetAtt': [induDec31, Arn]}]]}]]
      CliCommandDelete:
        'Fn::Join':
          - ' '
          -
            - 'aws cognito-idp update-user-pool --user-pool-id us-east-1_WrZwPbTz1'
            - '--policies PasswordPolicy=\{MinimumLength=8,RequireUppercase=true,RequireLowercase=true,RequireNumbers=true,RequireSymbols=true,TemporaryPasswordValidityDays=7\}'
            -
              'Fn::Join': ["", ['--verification-message-template ''', DefaultEmailOption=CONFIRM_WITH_CODE, '''']]
            - '--mfa-configuration OFF'
            - '--lambda-config'
            - 'CustomMessage=arn:aws:lambda:us-east-1:318300609668:function:testyyyinduuuu,PreAuthentication=arn:aws:lambda:us-east-1:318300609668:function:samplei'
      CliCommandUpdate:
        'Fn::Join':
          - ' '
          -
            - 'aws cognito-idp update-user-pool --user-pool-id us-east-1_WrZwPbTz1'
            - '--policies PasswordPolicy=\{MinimumLength=8,RequireUppercase=true,RequireLowercase=true,RequireNumbers=true,RequireSymbols=true,TemporaryPasswordValidityDays=7\}'
            -
              'Fn::Join': ["", ['--verification-message-template ''', DefaultEmailOption=CONFIRM_WITH_CODE, '''']]
            - '--mfa-configuration OFF'
            - '--lambda-config'
            -
              'Fn::Join': [',', ['CustomMessage=arn:aws:lambda:us-east-1:318300609668:function:testyyyinduuuu', 'PreAuthentication=arn:aws:lambda:us-east-1:318300609668:function:samplei', {'Fn::Join': ["", [CreateAuthChallenge=, {'Fn::GetAtt': [induDec31, Arn]}]]}]]
  cli2cloudformationinduDec31:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: cli2cloudformationinduDec31
      Description: 'This is a utility lambda generated by Sigma, for bringing CF-unsupported operations into the CF template. Kudos to https://github.com/lucioveloso/cli2cloudformation'
      Code:
        S3Bucket: resources.us-east-1.sigma.slappforge.com
        S3Key: CF/cf_shell_v2.zip
      MemorySize: 128
      Handler: index.lambda_handler
      Timeout: 60
      Runtime: python3.8
      Layers: []
      TracingConfig:
        Mode: PassThrough
      Role:
        'Fn::GetAtt':
          - cli2cloudformationinduDec31ExecutionRole
          - Arn
  cli2cloudformationinduDec31ExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
      Policies:
        -
          PolicyName: cli2cloudformationinduDec31Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - {Effect: Allow, Action: ['cognito-idp:UpdateUserPool'], Resource: 'arn:aws:cognito-idp:us-east-1:318300609668:userpool/us-east-1_WrZwPbTz1'}
  apiginduuDec31Deployment1609394720146:
    Type: 'AWS::ApiGateway::Deployment'
    Properties:
      RestApiId:
        Ref: apiginduuDec31
      Description: 'An API deployment generated by Sigma for API induu-dec31'
      StageName: test123
    DependsOn:
      - apiginduuDec31indunfdfdfilqatstANY
